# Maintainer: Massimiliano Torromeo <massimiliano.torromeo@gmail.com>

_cfgdir=/etc/nginx
_tmpdir=/var/lib/nginx

pkgname=nginx-pro
pkgver=1.11.5
pkgrel=1

_davextver=0.0.3
_pushstreamver=0.5.2
_cachepurgever=2.3.1
_modsecver=2.9.1
_devkitver=0.3.0
_redisver=0.3.8
_pagespeedver=latest-stable
_psolver=1.11.33.4
_brotliver=12529813a9f8475718370a19007c7905601a62ad
_njsver=0.1.3

_openresty=(
	'echo v0.60'
	'lua v0.10.6'
	'srcache v0.31'
	'set-misc v0.31'
	'redis2 v0.13'
	'memc v0.17'
	'headers-more v0.31'
)

# https://github.com/arut/nginx-dav-ext-module/releases
# https://github.com/wandenberg/nginx-push-stream-module/releases
# https://github.com/SpiderLabs/ModSecurity/releases
# https://github.com/simpl/ngx_devel_kit/releases
# https://www.nginx.com/resources/wiki/modules/redis/
# https://github.com/pagespeed/ngx_pagespeed/releases
# https://developers.google.com/speed/pagespeed/module/release_notes
# https://github.com/google/ngx_brotli
# http://hg.nginx.org/njs/tags
# https://github.com/openresty/echo-nginx-module/releases
# https://github.com/openresty/lua-nginx-module/releases
# https://github.com/openresty/srcache-nginx-module/releases
# https://github.com/openresty/set-misc-nginx-module/releases
# https://github.com/openresty/redis2-nginx-module/releases
# https://github.com/openresty/memc-nginx-module/releases
# https://github.com/openresty/headers-more-nginx-module/releases

pkgdesc="Lightweight HTTP server with some additional modules (no mail modules)"
arch=('i686' 'x86_64')
depends=('libxslt' 'gd' 'lua51' 'luajit' 'yajl' 'curl' 'apr-util' 'geoip' 'libbrotli')
makedepends=('git' 'apache' 'hardening-wrapper')
url="http://nginx.org"
license=('custom')
conflicts=('nginx')
provides=('nginx')

backup=(${_cfgdir:1}/modsec-recommended.conf
        ${_cfgdir:1}/fastcgi.conf
        ${_cfgdir:1}/fastcgi_params
        ${_cfgdir:1}/koi-win
        ${_cfgdir:1}/koi-utf
        ${_cfgdir:1}/mime.types
        ${_cfgdir:1}/nginx.conf
        ${_cfgdir:1}/scgi_params
        ${_cfgdir:1}/uwsgi_params
        ${_cfgdir:1}/win-utf
        etc/logrotate.d/nginx)

source=(
	http://nginx.org/download/nginx-$pkgver.tar.gz
	https://github.com/simpl/ngx_devel_kit/archive/v$_devkitver/ngx_devel_kit-$_devkitver.tar.gz
	https://github.com/SpiderLabs/ModSecurity/archive/v$_modsecver/modsecurity-$_modsecver.tar.gz
	https://github.com/arut/nginx-dav-ext-module/archive/v$_davextver/nginx-dav-ext-module-$_davextver.tar.gz
	https://github.com/mtorromeo/ngx_cache_purge/archive/$_cachepurgever/nginx_cache_purge-$_cachepurgever.tar.gz
	https://github.com/wandenberg/nginx-push-stream-module/archive/$_pushstreamver/nginx-push-stream-module-$_pushstreamver.tar.gz
	http://people.freebsd.org/~osa/ngx_http_redis-$_redisver.tar.gz
	https://github.com/pagespeed/ngx_pagespeed/archive/$_pagespeedver/pagespeed-module-$_pagespeedver.tar.gz
	pagespeed-$_psolver.tar.gz::https://dl.google.com/dl/page-speed/psol/$_psolver.tar.gz
	https://github.com/google/ngx_brotli/archive/$_brotliver/ngx_brotli-$_brotliver.tar.gz
	njs-$_njsver.tar.gz::http://hg.nginx.org/njs/archive/$_njsver.tar.gz
	modsec-recommended.conf
	service
	logrotate
)

_modules=(
	--add-dynamic-module=../ngx_devel_kit-$_devkitver
	--add-dynamic-module=../ngx_cache_purge-$_cachepurgever
	--add-module=../nginx-dav-ext-module-$_davextver
	--add-dynamic-module=../nginx-push-stream-module-$_pushstreamver
	--add-module=../ModSecurity-$_modsecver/nginx/modsecurity
	--add-dynamic-module=../ngx_http_redis-$_redisver
	--add-dynamic-module=../ngx_pagespeed-$_pagespeedver
	--add-dynamic-module=../ngx_brotli-$_brotliver
	--add-dynamic-module=../njs-$_njsver/nginx
)

for _module in "${_openresty[@]}"; do
	_module=(${_module})
	_modname=${_module[0]}-nginx-module
	_modver=${_module[1]}
	source+=(https://github.com/openresty/$_modname/archive/$_modver/$_modname-$_modver.tar.gz)
	[ ${_modver:0:1} == 'v' ] && _modver=${_modver:1}
	_modules+=(--add-dynamic-module=../$_modname-$_modver)
done

build() {
	cd "$srcdir"/ngx_pagespeed-$_pagespeedver
	ln -s ../psol

	msg "Compiling mod-security"
	cd "$srcdir"/ModSecurity-$_modsecver

	sh autogen.sh
	CFLAGS="-g -O0" ./configure \
		--prefix=/usr \
		--enable-standalone-module \
		--disable-apache2-module \
		--enable-pcre-study \
		--enable-pcre-jit \
		--enable-pcre-match-limit=1000 \
		--enable-pcre-match-limit-recursion=1000 \
		--enable-lua-cache
	sed -r '/\$\$base/d' -i standalone/Makefile
	make
	make DESTDIR="$srcdir/ModSecurity-$_modsecver/install" install


	msg "Building nginx"
	cd "$srcdir"/nginx-$pkgver

	CFLAGS="-I /usr/include/httpd -I /usr/include/apr-1" \
	LUAJIT_LIB=/usr/lib \
	LUAJIT_INC=$(pkg-config luajit --cflags-only-I | sed 's/^-I//') \
	./configure \
		--prefix=$_cfgdir \
		--conf-path=$_cfgdir/nginx.conf \
		--sbin-path=/usr/bin/nginx \
		--modules-path=/usr/lib/nginx/modules \
		--pid-path=/run/nginx.pid \
		--lock-path=/run/lock/nginx.lock \
		--user=http \
		--group=http \
		--http-log-path=/var/log/nginx/access.log \
		--error-log-path=stderr \
		--http-client-body-temp-path=$_tmpdir/client-body \
		--http-proxy-temp-path=$_tmpdir/proxy \
		--http-fastcgi-temp-path=$_tmpdir/fastcgi \
		--http-scgi-temp-path=$_tmpdir/scgi \
		--http-uwsgi-temp-path=$_tmpdir/uwsgi \
		--with-pcre-jit \
		--with-file-aio \
		--with-threads \
		--with-http_dav_module \
		--with-http_geoip_module=dynamic \
		--with-http_gunzip_module \
		--with-http_gzip_static_module \
		--with-http_realip_module \
		--with-http_v2_module \
		--with-http_ssl_module \
		--with-http_stub_status_module \
		--with-http_addition_module \
		--with-http_degradation_module \
		--with-http_flv_module \
		--with-http_mp4_module \
		--with-http_secure_link_module \
		--with-http_sub_module \
		--with-http_xslt_module=dynamic \
		--with-http_image_filter_module=dynamic \
		--with-stream=dynamic \
		--with-stream_ssl_module \
		--with-stream_realip_module \
		--with-stream_ssl_preread_module \
		--with-stream_geoip_module=dynamic \
		--with-mail=dynamic \
		--with-mail_ssl_module \
		--with-http_perl_module=dynamic \
		--with-http_auth_request_module \
		${_modules[@]} \
		#--with-http_random_index_module \

	make
}

package() {
	cd "$srcdir"/nginx-$pkgver
	make DESTDIR="$pkgdir" install

	for bin in "$srcdir"/ModSecurity-$_modsecver/install/usr/bin/*; do
		binname=$(basename "$bin")
		install -Dm755 "$bin" "$pkgdir"/usr/bin/$binname
	done

	sed -e 's|\<user\s\+\w\+;|user html;|g' \
	    -e '2s|worker_processes  1|worker_processes auto|' \
	    -e '44s|html|/usr/share/nginx/html|' \
	    -e '54s|html|/usr/share/nginx/html|' \
	    -i "$pkgdir"$_cfgdir/nginx.conf

	rm "$pkgdir"/etc/nginx/*.default

	ln -s ../../usr/lib/nginx/modules "$pkgdir"/etc/nginx/modules

	install -d "$pkgdir"/var/lib/nginx
	install -dm700 "$pkgdir"/var/lib/nginx/proxy

	install -Dm644 "$srcdir"/modsec-recommended.conf "$pkgdir"$_cfgdir/modsec-recommended.conf

	install -d "$pkgdir"$_tmpdir
	install -dm700 -o http "$pkgdir"$_tmpdir/{proxy,modsecurity/{suspicious,msa}}

	install -d "$pkgdir"/var/log
	install -dm750 -o http -g log "$pkgdir"/var/log/nginx/modsec

	install -d "$pkgdir"/usr/share/nginx
	mv "$pkgdir"/etc/nginx/html/ "$pkgdir"/usr/share/nginx

	install -Dm644 "$srcdir"/logrotate "$pkgdir"/etc/logrotate.d/nginx
	install -Dm644 "$srcdir"/service "$pkgdir"/usr/lib/systemd/system/nginx.service
	install -Dm644 LICENSE "$pkgdir"/usr/share/licenses/$pkgname/LICENSE

	rmdir "$pkgdir"/run

	install -d "$pkgdir"/usr/share/man/man8/
	gzip -9c man/nginx.8 > "$pkgdir"/usr/share/man/man8/nginx.8.gz

	for i in ftdetect indent syntax; do
    install -Dm644 contrib/vim/$i/nginx.vim \
      "$pkgdir"/usr/share/vim/vimfiles/$i/nginx.vim
  done
}

sha256sums=('223f8a2345a75f891098cf26ccdf208b293350388f51ce69083674c9432db6f6'
            '88e05a99a8a7419066f5ae75966fb1efc409bad4522d14986da074554ae61619'
            'fdb81fefb17c7561328fe8df9ccbb15a7ebcbdd4110b6cb8dcdc0d970c6c3a04'
            'd428a0236c933779cb40ac8c91afb19d5c25a376dc3caab825bfd543e1ee530d'
            '1ca6347c7c817254594cd6be47d5890dd089f880482cce08971b8a137073de43'
            '1d07f38acdb8194bd49344b0ba21de101070de9b8731d27a8d22e928850bc199'
            '95d0ed7be40da2efc88883d72e52e5e272d2c34463583b7078e8fd6d55004934'
            '5b8bebc3124ba55388fcb97ee8f6009bd5d061c48bf274a04f6c99b7364e1f85'
            '97408b04bf7395ab34d7b5baed95ae3dc928746213ca02590773b66a7697a7dc'
            '9389806ce744ffeb9c211af97289235100105abb833d28ea236198ed23cba86a'
            '2fdc174ee2e4a35c9a1c57db23ea8ce14769a39345c37aa2593f22ff0f8e0437'
            '838637cc4f5fd9d3209720db23234d99972e95549d8ac8eb619474f66376e8b1'
            '78631071af6aed03cca9c53778984ab4c010346102634ce3372246f439c76b82'
            '303f1a15a4e9da19ccb99b7742fa69b109276fcd9731a87a05d8793f184ce61b'
            '1077da2229ac7d0a0215e9e6817e297c10697e095010d88f1adbd1add1ce9f4e'
            'b98c4f648589bbf3e2c3d5fd18664e7a7ef89ac083e96c8e984fa919e7a7c073'
            '3f9729e73a8340926fa9d9fc15707c2f287cd27b6a9fe42e83f660ca48a5972d'
            '97946a68937b50ab8637e1a90a13198fe376d801dc3e7447052e43c28e9ee7de'
            '1d2486e38cf10390961d507e0e1252e898c8cbc89bbef618f7439d6c23708523'
            '25cbe3ff4931283a681260607bc91ae4a922075345d5770b293c6cd7f1e3bdcc'
            'b2e8162cce2d24861b1ed5bbb30fc51d5215e3f4bb9d01f53fc344904d5911e7')
