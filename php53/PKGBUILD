# Maintainer: Massimiliano Torromeo <massimiliano.torromeo@gmail.com>

pkgbase=php53
pkgname=('php53'
         'php53-cgi'
         'php53-apache'
         'php53-fpm'
         'php53-embed'
         'php53-pear'
         'php53-enchant'
         'php53-gd'
         'php53-intl'
         'php53-ldap'
         'php53-mcrypt'
         'php53-mssql'
         'php53-odbc'
         'php53-pgsql'
         'php53-pspell'
         'php53-snmp'
         'php53-sqlite'
         'php53-tidy'
         'php53-xsl')
pkgver=5.3.29
pkgrel=4
arch=('i686' 'x86_64')
license=('PHP')
url='http://www.php.net'
makedepends=('apache' 'imap' 'postgresql-libs' 'libldap' 'postfix'
             'sqlite' 'unixodbc' 'net-snmp' 'libzip' 'enchant' 'file' 'freetds'
             'libmcrypt' 'tidyhtml' 'aspell' 'libltdl' 'libpng' 'libjpeg' 'icu'
             'curl' 'libxslt' 'openssl' 'bzip2' 'db' 'gmp' 'freetype2'
             'pkg-config')
source=("http://www.php.net/distributions/${pkgbase%53}-${pkgver}.tar.bz2"
        'php.ini.patch' 'apache.conf' 'php-fpm.conf.in.patch'
        'logrotate.d.php-fpm' 'php-fpm.service' 'php-fpm.tmpfiles'
        'php-4.3.11-shutdown.patch'
        'php-5.0.4-dlopen.patch'
        'php-5.0.4-tests-wddx.patch'
        'php-5.2.0-includedir.patch'
        'php-5.2.4-embed.patch'
        'php-5.2.4-norpath.patch'
        'php-5.3.0-easter.patch'
        'php-5.3.0-install.patch'
        'php-5.3.0-recode.patch'
        'php-5.3.28-zendparse.patch'
        'php-5.3.29-CVE-2014-3597.patch'
        'php-5.3.29-CVE-2014-8142.patch'
        'php-5.3.29-CVE-2015-0231.patch'
        'php-5.3.29-CVE-2015-0232.patch'
        'php-5.3.3-CVE-2014-2497.patch'
        'php-5.3.3-CVE-2014-3587.patch'
        'php-5.3.3-CVE-2014-3668.patch'
        'php-5.3.3-CVE-2014-3669.patch'
        'php-5.3.3-CVE-2014-3670.patch'
        'php-5.3.3-CVE-2014-3710.patch'
        'php-5.3.3-CVE-2014-4670.patch'
        'php-5.3.3-CVE-2014-4698.patch'
        'php-5.3.3-macropen.patch')

prepare() {
	cd ${srcdir}/${pkgbase%53}-${pkgver}

	# adjust paths
	patch -p0 -i "$srcdir"/php.ini.patch
	patch -p1 -i "$srcdir"/php-fpm.conf.in.patch

  patch -p1 -i "$srcdir"/php-4.3.11-shutdown.patch
  patch -p1 -i "$srcdir"/php-5.0.4-dlopen.patch
  patch -p1 -i "$srcdir"/php-5.0.4-tests-wddx.patch
  patch -p1 -i "$srcdir"/php-5.2.0-includedir.patch
  patch -p1 -i "$srcdir"/php-5.2.4-embed.patch
  patch -p1 -i "$srcdir"/php-5.2.4-norpath.patch
  patch -p1 -i "$srcdir"/php-5.3.0-easter.patch
  patch -p1 -i "$srcdir"/php-5.3.0-install.patch
  patch -p1 -i "$srcdir"/php-5.3.0-recode.patch
  patch -p1 -i "$srcdir"/php-5.3.28-zendparse.patch
  patch -p1 -i "$srcdir"/php-5.3.29-CVE-2014-3597.patch
  patch -p1 -i "$srcdir"/php-5.3.29-CVE-2014-8142.patch
  patch -p1 -i "$srcdir"/php-5.3.29-CVE-2015-0231.patch
  patch -p1 -i "$srcdir"/php-5.3.29-CVE-2015-0232.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-2497.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-3587.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-3668.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-3669.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-3670.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-3710.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-4670.patch
  patch -p1 -i "$srcdir"/php-5.3.3-CVE-2014-4698.patch
  patch -p1 -i "$srcdir"/php-5.3.3-macropen.patch

	# workaround for pkg-config 0.28
	sed -e 's/ && test -n "$OPENSSL_INCS"//g' \
		-i configure
}

build() {
	local _phpconfig="--srcdir=../${pkgbase%53}-${pkgver} \
		--prefix=/opt/php53 \
		--sysconfdir=/etc/php53 \
		--localstatedir=/var \
		--with-layout=GNU \
		--with-config-file-path=/etc/php53 \
		--with-config-file-scan-dir=/etc/php53/conf.d \
		--enable-inline-optimization \
		--disable-debug \
		--disable-rpath \
		--disable-static \
		--enable-shared \
		--mandir=/usr/share/man \
		--without-pear \
		"

	local _phpextensions="--enable-bcmath=shared \
		--enable-calendar=shared \
		--enable-dba=shared \
		--enable-exif=shared \
		--enable-ftp=shared \
		--enable-gd-native-ttf \
		--enable-intl=shared \
		--enable-json=shared \
		--enable-mbregex \
		--enable-mbstring \
		--enable-pdo \
		--enable-phar=shared \
		--enable-posix=shared \
		--enable-session \
		--enable-shmop=shared \
		--enable-soap=shared \
		--enable-sockets=shared \
		--enable-sqlite-utf8 \
		--enable-sysvmsg=shared \
		--enable-sysvsem=shared \
		--enable-sysvshm=shared \
		--enable-xml \
		--enable-zip=shared \
		--with-bz2=shared \
		--with-curl=shared \
		--with-db4=/usr \
		--with-enchant=shared,/usr \
		--with-freetype-dir=shared,/usr \
		--with-gd=shared \
		--with-gdbm=shared \
		--with-gettext=shared \
		--with-gmp=shared \
		--with-iconv=shared \
		--with-icu-dir=/usr \
		--with-imap-ssl=shared \
		--with-imap=shared \
    --with-kerberos=/usr \
		--with-jpeg-dir=shared,/usr \
		--with-ldap=shared \
		--with-ldap-sasl \
		--with-mcrypt=shared \
		--with-mhash \
		--with-mssql=shared \
		--with-mysql-sock=/run/mysqld/mysqld.sock \
		--with-mysql=shared,mysqlnd \
		--with-mysqli=shared,mysqlnd \
		--with-openssl=shared \
		--with-pcre-regex=/usr \
		--with-pdo-mysql=shared,mysqlnd \
		--with-pdo-odbc=shared,unixODBC,/usr \
		--with-pdo-pgsql=shared \
		--with-pdo-sqlite=shared,/usr \
		--with-pgsql=shared \
		--with-png-dir=shared,/usr \
		--with-pspell=shared \
		--with-regex=php \
		--with-snmp=shared \
		--with-sqlite3=shared,/usr \
		--with-sqlite=shared \
		--with-tidy=shared \
		--with-unixODBC=shared,/usr \
		--with-xmlrpc=shared \
		--with-xsl=shared \
		--with-zlib \
		--without-db2 \
		--without-db3 \
		"

	export EXTENSION_DIR=/opt/php53/modules
	export PEAR_INSTALLDIR=/opt/php53/pear
	export CPPFLAGS="$CPPFLAGS -O2"

	msg2 "Building CLI"
	cd "$srcdir"
	rm -rf build-php
	mkdir build-php
	cd build-php
	ln -s ../${pkgbase%53}-${pkgver}/configure
	./configure ${_phpconfig} \
		--disable-cgi \
		--with-readline \
		--enable-pcntl \
		${_phpextensions}
	make

	msg2 "Building cgi/fcgi API"
	cd "$srcdir"
	rm -rf build-cgi
	cp -a build-php build-cgi
	cd build-cgi
	./configure ${_phpconfig} \
		--disable-cli \
		--enable-cgi \
		${_phpextensions}
	make

	msg2 "Building apache API"
	cp -a ${srcdir}/build-php ${srcdir}/build-apache
	cd ${srcdir}/build-apache
	./configure ${_phpconfig} \
		--disable-cli \
		--with-apxs2 \
		${_phpextensions}
	make

	msg2 "Building FPM API"
	cd "$srcdir"
	rm -rf build-fpm
	cp -a build-php build-fpm
	cd build-fpm
	./configure ${_phpconfig} \
		--disable-cli \
		--enable-fpm \
		--with-fpm-user=http \
		--with-fpm-group=http \
		${_phpextensions}
	make

	msg2 "Building Embed"
	# embed
	cp -a ${srcdir}/build-php ${srcdir}/build-embed
	cd ${srcdir}/build-embed
	./configure ${_phpconfig} \
		--disable-cli \
		--enable-embed=shared \
		${_phpextensions}
	make

	msg2 "Building PEAR"
	cd "$srcdir"
	rm -rf build-pear
	cp -a build-php build-pear
	cd build-pear
	./configure ${_phpconfig} \
		--disable-cgi \
		--with-readline \
		--enable-pcntl \
		--with-pear \
		${_phpextensions}
	make
}

# check() {
# 	cd ${srcdir}/build-php
# 	make test
# }

package_php53() {
	pkgdesc='An HTML-embedded scripting language'
	depends=('pcre' 'libxml2' 'bzip2' 'curl' 'c-client')
	backup=('etc/php53/php.ini')

	cd ${srcdir}/build-php
	make -j1 INSTALL_ROOT=${pkgdir} install

	# install php.ini
	install -D -m644 ${srcdir}/${pkgbase%53}-${pkgver}/php.ini-production ${pkgdir}/etc/php53/php.ini
	install -d -m755 ${pkgdir}/etc/php53/conf.d/

	# remove conflicting files
	rm -rf ${pkgdir}/usr/share/man

	# remove static modules
	rm -f ${pkgdir}/opt/php53/modules/*.a
	# remove modules provided by sub packages
	rm -f ${pkgdir}/opt/php53/modules/{enchant,gd,intl,ldap,mcrypt,mssql,odbc,pdo_odbc,pgsql,pdo_pgsql,pspell,snmp,sqlite3,pdo_sqlite,tidy,xsl}.so
}

package_php53-cgi() {
	pkgdesc='CGI and FCGI SAPI for PHP'
	depends=('php53')

	install -D -m755 ${srcdir}/build-cgi/sapi/cgi/php-cgi ${pkgdir}/opt/php53/bin/php-cgi
}

package_php53-apache() {
	pkgdesc='Apache SAPI for PHP'
# 	conflicts="php-apache"
	depends=('php53' 'apache')
	backup=('etc/httpd/conf/extra/php5_module.conf')

	install -D -m755 ${srcdir}/build-apache/libs/libphp5.so ${pkgdir}/usr/lib/httpd/modules/libphp5.so
	install -D -m644 ${srcdir}/apache.conf ${pkgdir}/etc/httpd/conf/extra/php5_module.conf
}

package_php53-fpm() {
	pkgdesc='FastCGI Process Manager for PHP'
	depends=('php53' 'systemd')
	backup=('etc/php53/php-fpm.conf')
	install='php-fpm.install'

	install -D -m755 ${srcdir}/build-fpm/sapi/fpm/php-fpm ${pkgdir}/opt/php53/bin/php-fpm
	install -D -m644 ${srcdir}/build-fpm/sapi/fpm/php-fpm.conf ${pkgdir}/etc/php53/php-fpm.conf
	install -D -m644 ${srcdir}/logrotate.d.php-fpm ${pkgdir}/etc/logrotate.d/php53-fpm
	install -d -m755 ${pkgdir}/etc/php53/fpm.d
	install -D -m644 ${srcdir}/php-fpm.tmpfiles ${pkgdir}/usr/lib/tmpfiles.d/php53-fpm.conf
	install -D -m644 ${srcdir}/php-fpm.service ${pkgdir}/usr/lib/systemd/system/php53-fpm.service
}

package_php53-embed() {
	pkgdesc='Embed SAPI for PHP'
	depends=('php53')

	install -D -m755 ${srcdir}/build-embed/libs/libphp5.so ${pkgdir}/opt/php53/lib/libphp5.so
	install -D -m644 ${srcdir}/php-${pkgver}/sapi/embed/php_embed.h ${pkgdir}/opt/php53/include/php/sapi/embed/php_embed.h
}

package_php53-pear() {
	pkgdesc='PHP Extension and Application Repository'
	depends=('php53')
	backup=('etc/php53/pear.conf')

	cd ${srcdir}/build-pear
	make -j1 install-pear INSTALL_ROOT=${pkgdir}
	local i
	while read i; do
		[ ! -e "$i" ] || rm -rf "$i"
	done < <(find ${pkgdir} -name '.*')
}

package_php53-enchant() {
	depends=('php53' 'enchant')
	pkgdesc='enchant module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/enchant.so ${pkgdir}/opt/php53/modules/enchant.so
}

package_php53-gd() {
	depends=('php53' 'libpng' 'libjpeg' 'freetype2')
	pkgdesc='gd module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/gd.so ${pkgdir}/opt/php53/modules/gd.so
}

package_php53-intl() {
	depends=('php53' 'icu')
	pkgdesc='intl module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/intl.so ${pkgdir}/opt/php53/modules/intl.so
}

package_php53-ldap() {
	depends=('php53' 'libldap')
	pkgdesc='ldap module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/ldap.so ${pkgdir}/opt/php53/modules/ldap.so
}

package_php53-mcrypt() {
	depends=('php53' 'libmcrypt' 'libltdl')
	pkgdesc='mcrypt module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/mcrypt.so ${pkgdir}/opt/php53/modules/mcrypt.so
}

package_php53-mssql() {
	depends=('php53' 'freetds')
	pkgdesc='mssql module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/mssql.so ${pkgdir}/opt/php53/modules/mssql.so
}

package_php53-odbc() {
	depends=('php53' 'unixodbc')
	pkgdesc='ODBC modules for PHP'
	install -D -m755 ${srcdir}/build-php/modules/odbc.so ${pkgdir}/opt/php53/modules/odbc.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_odbc.so ${pkgdir}/opt/php53/modules/pdo_odbc.so
}

package_php53-pgsql() {
	depends=('php53' 'postgresql-libs')
	pkgdesc='PostgreSQL modules for PHP'
	install -D -m755 ${srcdir}/build-php/modules/pgsql.so ${pkgdir}/opt/php53/modules/pgsql.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_pgsql.so ${pkgdir}/opt/php53/modules/pdo_pgsql.so
}

package_php53-pspell() {
	depends=('php53' 'aspell')
	pkgdesc='pspell module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/pspell.so ${pkgdir}/opt/php53/modules/pspell.so
}

package_php53-snmp() {
	depends=('php53' 'net-snmp')
	pkgdesc='snmp module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/snmp.so ${pkgdir}/opt/php53/modules/snmp.so
}

package_php53-sqlite() {
	depends=('php53' 'sqlite')
	pkgdesc='sqlite module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/sqlite3.so ${pkgdir}/opt/php53/modules/sqlite3.so
	install -D -m755 ${srcdir}/build-php/modules/pdo_sqlite.so ${pkgdir}/opt/php53/modules/pdo_sqlite.so
}

package_php53-tidy() {
	depends=('php53' 'tidyhtml')
	pkgdesc='tidy module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/tidy.so ${pkgdir}/opt/php53/modules/tidy.so
}

package_php53-xsl() {
	depends=('php53' 'libxslt')
	pkgdesc='xsl module for PHP'
	install -D -m755 ${srcdir}/build-php/modules/xsl.so ${pkgdir}/opt/php53/modules/xsl.so
}

sha256sums=('c4e1cf6972b2a9c7f2777a18497d83bf713cdbecabb65d3ff62ba441aebb0091'
            '4c4caae7abd383a686b67f1478f0fb1ecc2c720753badae365792dd88f1de2ab'
            '6ee6ed48b8416390c56b2e32b75c79f85586431b5c44c48ed22ae6a8dbe68332'
            '3de08a2df52057884b13ece9ec031f063c3297c47bfb933cdf844a3574552874'
            '2608db714797c9ffc65dd6a7119221738b7de5abe55f105986bdd50152d6b7c8'
            '8c3025487b07f1932e8d5dd908959cf048d7f1a8280f5ebf1d3b2cf1eae4cacf'
            '640dba0d960bfeaae9ad38d2826d3f6b5d6c175a4d3e16664eefff29141faad5'
            '7c89314522b4310243a09d4b1741a379bc4c2964acd99f16cc76238e1ff9660a'
            'd310c622a73d225974f745a94ac536c12dd67c27fc38b3f4e44a845b7c97863a'
            '880c914233065ce99bbe0a8b77d0c8fc47c92b42d2718de6dc135acc8b92cb9f'
            '93b002c43b9b497b259c044dc97f79d4340fed2aed3f7dfd8d0d5d9bc14893cb'
            'f27bf095aa6e347189d5bed297c176b8ecd3338989a5847a38a0f037bc363af3'
            '71223a9eb6dc66a10ac1afa56e8dc7017e21125c0960da9b59efc5097d51618f'
            '183f33be9b43e81b7aefc72619a952549980056fb48d51bdc4450c54c97e7b45'
            '5fd4d07ee66d7ae422722ef291106424135864e5338af47296e5820788e9ebc9'
            '9d974b64d7a5bbefc200b84bbca1f86986c97904932e53c6cd5ce499f55c5526'
            'f08ea9c99a5e58d937ed4da46191ce7ce08369f724c8003db8975c8972db0aa5'
            '5f33c184f202db85b134c47e6a8ca4ae5a85edb395150ada77f0091dd0c80e37'
            'a371252b7462839abe5697edfcf2a6e1ff8e51a31fc465994ee415b668c430a0'
            'ad1eec6852fff3aaa082a8affce1e149b7cd3c75978a274f771c6fb981f9b4ca'
            '52ac203c74c8cbb6d3e5972df41add75063fefd1c2f5fc430d8980fd72b99639'
            'a2af48d936e0c3d8cd5f44a0b2137b28d25dd8d1993afd433c0ccf0e584ff285'
            'c04ff947f56132221915f4f983af4df61b6956a8ef056b6188a856b8fb5d5e26'
            '8f1d869687336edbb6d274b52a69c77d5640dd539ccbb8a08b0f9c96ff280083'
            '69b8279c5542163fa1b2ac7f7e2f9ac61e2d701e54b3d16a930dc1de27deb087'
            'af37e1f06d453fb30686907a238a768570b3f2011311ea2c30dd8e74996ac458'
            'f500be4cdda199fa7544a136f733086f7f9b42455716d31fe4f6f8f1d2fbe595'
            '39b48d50b2e659b0a1ebeb97a38f8be7e414e9a9ab7c7fc9cd8f414b650ddbd5'
            '7db372838c4bb717e6ab0970fe72f3aa354adafb3b0610d6620799fe67c4c5a9'
            '65e9c911c6ead3b257d62f50968d23dd5388274ec1c0bdb21b3f6d92fb3b5d7f')
